# -*- coding: utf-8 -*-
"""fuzzyStrings.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16mnnSk9rfMfxiax6xqGi3igTfZ3iGied
"""

import pandas as pd

!pip install fuzzywuzzy

#fuzzywuzzy works by calculating the levens
from fuzzywuzzy import fuzz

!wget https://raw.githubusercontent.com/susanli2016/NLP-with-Python/master/room_type.csv

data = pd.read_csv('/content/room_type.csv.1')
data.head()

#find the ratio of similarity between two strings, in order
print(fuzz.ratio('This is a test', 'Testing this out'))
print(fuzz.ratio('To sit in solemn silence', 'On a dull dark dock'))
print(fuzz.ratio('These sentences repeat words', 'Words repeat in these sentences'))

#now we check for partial string similarity
print(fuzz.partial_ratio('This is a test', 'Testing this out'))
print(fuzz.partial_ratio('To sit in solemn silence', 'On a dull dark dock'))
print(fuzz.partial_ratio('These sentences repeat words', 'Words repeat in these sentences'))

#Now we compare while ignoring order
print(fuzz.token_sort_ratio('This is a test', 'Testing this out'))
print(fuzz.token_sort_ratio('To sit in solemn silence', 'On a dull dark dock'))
print(fuzz.token_sort_ratio('These sentences repeat words', 'Words repeat in these sentences'))

#Let's exclude duplicate words
print(fuzz.token_set_ratio('This is a test', 'Testing this out'))
print(fuzz.token_set_ratio('To sit in solemn silence', 'On a dull dark dock'))
print(fuzz.token_set_ratio('These sentences repeat words', 'Words repeat in these sentences'))

#comparing similarity across our test data
#this will give us the % of rows in our df that are over 70% similar
def get_ratio(row):
    phrase = row['Expedia']
    phrase2 = row['Booking.com']
    return fuzz.token_set_ratio(phrase, phrase2)

len(data[data.apply(get_ratio, axis=1) > 70]) / len(data)

